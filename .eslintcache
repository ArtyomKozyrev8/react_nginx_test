[{"C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\index.js":"1","C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\reportWebVitals.js":"2","C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\App.js":"3","C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\comps\\Header.js":"4","C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\comps\\List.js":"5","C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\comps\\ApiReqText.js":"6","C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\comps\\WSItem.js":"7"},{"size":500,"mtime":1609780436947,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":744,"mtime":1609870012692,"results":"11","hashOfConfig":"9"},{"size":739,"mtime":1609780599088,"results":"12","hashOfConfig":"9"},{"size":1468,"mtime":1609789006668,"results":"13","hashOfConfig":"9"},{"size":1058,"mtime":1609785186059,"results":"14","hashOfConfig":"9"},{"size":2167,"mtime":1609871091857,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"11q6zks",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\index.js",[],["33","34"],"C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\reportWebVitals.js",[],"C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\App.js",[],"C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\comps\\Header.js",[],["35","36"],"C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\comps\\List.js",[],"C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\comps\\ApiReqText.js",[],"C:\\Users\\Artyom\\PycharmProjects\\react_nginx_test\\src\\comps\\WSItem.js",["37"],"import React from \"react\"\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nconst socket_url = new URL(\"api/socket\", window.location.href);  // create url for socket\r\nsocket_url.protocol = socket_url.protocol.replace('http', 'ws');\r\n\r\nexport default class WSItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            messages: [],\r\n        }\r\n    }\r\n\r\n    feed_server_wrapper = (s) => {\r\n        let n = 1;\r\n        function feed_server() {\r\n            if (s.readyState) {\r\n                s.send(`Hello server ${n}`);  // send message to socket here\r\n                n = n + 1;\r\n                if (n === 10) {\r\n                    s.send(\"close\");\r\n                }\r\n            }\r\n        }\r\n        return feed_server\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connection = new WebSocket(socket_url)\r\n        this.connection.onopen = () => {\r\n            this.connection.send('Start server work!');\r\n            this.state.messages.push('Start server work!');\r\n            this.setState({\r\n                messages: this.state.messages\r\n            })\r\n        }\r\n\r\n        this.connection.onclose = (e) => {\r\n            this.state.messages.push(\"Closed\");\r\n            this.setState({\r\n                messages: this.state.messages\r\n            })\r\n            clearInterval(this.intervalId); // remove sender since socket was closed\r\n        }\r\n\r\n        this.connection.onmessage = (e) => {\r\n            this.state.messages.push(e.data);\r\n            this.setState({\r\n                messages: this.state.messages\r\n            })\r\n        }\r\n        this.intervalId = setInterval(this.feed_server_wrapper(this.connection), new Number(this.props.Interval))\r\n    }\r\n\r\n    showList = () => {\r\n        let liArray = []\r\n        for (let i of this.state.messages) {\r\n            liArray.push(<li key={`${i}-${getRandomInt(100000)}`}> {i} </li>)\r\n        }\r\n        return liArray\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"flexDiv\"}>\r\n                <ul>{this.showList()}</ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":57,"column":82,"nodeType":"46","messageId":"47","endLine":57,"endColumn":113},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","no-global-assign","no-unsafe-negation"]